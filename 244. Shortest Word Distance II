class WordDistance {
    String [] words; 
    

    public WordDistance(String[] words) {
        
        this.words = new String [words.length]; 
        this.words = words;
        
        
        
    }
    
    public int shortest(String word1, String word2) {
        int left = 0;
        int right = words.length-1 ;
        Map<String, ArrayList<Integer>> map = new HashMap<>();
        for(int i = 0; i < words.length; i++){
            if(words[i].equals(word1)){
               if(!map.containsKey(word1)){
                    map.put(word1, new ArrayList<>());
                }
                map.get(word1).add(i); 
            }
            if(words[i].equals(word2)){
               if(! map.containsKey(word2)){
                    map.put(word2, new ArrayList<>());
                }
                map.get(word2).add(i); 
            }
        }
        /*
        while(left < right){
            if(words[left] == word1){
                if(! map.containsKey(word1)){
                    map.put(word1, new ArrayList<>());
                }
                map.get(word1).add(left);
            }
            if(words[right] == word1){
                if(! map.containsKey(word1)){
                    map.put(word1, new ArrayList<>());
                }
                map.get(word1).add(right);
            }
            if(words[left] == word2){
                if(! map.containsKey(word2)){
                    map.put(word2, new ArrayList<>());
                }
                map.get(word2).add(left);
            }
            if(words[right] == word2){
                if(! map.containsKey(word2)){
                    map.put(word2, new ArrayList<>());
                }
                map.get(word2).add(right);
            }
            left++;
            right--;
        }
        */
        if(map != null){
            List<Integer> list1 = map.get(word1);
            List<Integer> list2 = map.get(word2);
            int a = 0; int b = 0;
            int shortestDistance = Integer.MAX_VALUE;
            while(a < list1.size() && b < list2.size()){
                if(Math.abs(list1.get(a) - list2.get(b)) <shortestDistance){
                    shortestDistance = Math.abs(list1.get(a) - list2.get(b));
                }
                if(list1.get(a) < list2.get(b)){
                    a++;
                }else{
                    b++;
                }
            }
            return shortestDistance;
        }
        return -1;
    }
}

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(words);
 * int param_1 = obj.shortest(word1,word2);
 */
