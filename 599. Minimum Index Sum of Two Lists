Approach: using hashmap
1. store String element with corresponding to index of list1
2. having one varible  minIndexSum to track minindexSum
3. iterate in list2 and check if element of list2 present in map, if it does calculate the sum of indices 
4. if this sum is less that the minindexSum, clear the result string
5. if sum is equals to minindexSum then just add thre string to result array
6. return the result


class Solution {
    public String[] findRestaurant(String[] list1, String[] list2) {
        Map<String, Integer> mapA = new HashMap<>();
        for(int i = 0 ; i < list1.length; i++){
            if(!mapA.containsKey(list1[i])){
                mapA.put(list1[i], i);
            }
        }
        List<String> result = new ArrayList<>();
        int minindexSum = Integer.MAX_VALUE;
        for(int i = 0 ; i < list2.length; i++){
            if(mapA.containsKey(list2[i])){
                int sum = i+ mapA.get(list2[i]);
                if(sum < minindexSum){
                    if(!result.isEmpty()){
                        result.clear();
                    }
                    minindexSum = sum;
                    result.add(list2[i]);  
                }else if(sum == minindexSum){
                    result.add(list2[i]); 
                }
            }
        }
        
        String [] resultArray = result.stream().toArray(String[] :: new);
            return resultArray;
    }
}
