/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null && l2 == null){
            return null;
        }
        if(l1 == null){
            return l2;
        }
        if(l2 == null){
            return l1;
        }
            int carry = 0;
            int x = l1.val + l2.val + carry;
            ListNode head = new ListNode (x % 10);
            ListNode curr = head;
            carry = x /10;
            l1 = l1.next;
            l2 = l2.next;

        while(l1 != null && l2 != null){
            int sum = l1.val + l2.val + carry;
            ListNode newnode = new ListNode (sum % 10);
            curr.next = newnode;
            curr = curr.next;
            carry = sum /10;
            l1 = l1.next;
            l2 = l2.next;
        }
        while(l1 != null){
            int sum = l1.val + carry;
            ListNode newnode = new ListNode (sum % 10);
            curr.next = newnode;
            curr = curr.next;
            carry = sum/10;
            l1 = l1.next;
        }
        while(l2 != null){
            int sum = l2.val + carry;
            ListNode newnode = new ListNode (sum % 10);
            curr.next = newnode;
            curr = curr.next;
            carry = sum/10;
            l2 = l2.next;
        }
        while(carry > 0){
            
            ListNode newnode = new ListNode(carry %10);
            curr.next = newnode;
            curr = curr.next;
            carry = carry / 10;
        }
        return head;
    }
}
