Approach: Its simmilar problem of finding the connected component in undirected graph. 
I would use dfs, take one row and visited all of the row connected to it and mark it visited
at the end 

class Solution {
    public int findCircleNum(int[][] M) {
        if(M.length == 0 || M[0].length == 0){
            return 0;
        }
        int[] visited = new int[M.length];
        int count = 0;
        for(int i = 0; i < M.length ; i++){
            if(visited[i] == 0){
                dfs(M, i, visited);
                count++;
            }
        }
        return count;
        
    }
    public void dfs(int[][] M, int i, int[] visited){
        for(int j = 0 ; j < M[0].length ;j++){
            if(visited[j] == 0 && M[i][j] == 1){
                visited[j] = 1;
                dfs(M, j,visited);
            }
        }
    }
}
