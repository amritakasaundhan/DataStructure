class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        for(int num : nums){
            list.add(num);
        }
        
        backtrack(nums, result, 0, list);
        return result;
    }
    public void backtrack(int[] nums, List<List<Integer>> result, int length, List<Integer> list){
        if(length == nums.length){
            result.add(new ArrayList<>(list));
            return;
        }
        
        for(int i = length ; i < nums.length; i++){
            Collections.swap(list, length, i);
            backtrack(nums, result, length+1, list);
            Collections.swap(list, i, length);
        }
    }
}
