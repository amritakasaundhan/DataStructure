class Solution {
    public int minDominoRotations(int[] A, int[] B) {
        if(A.length == 0){
            return 0;
        }
        if(A.length != B.length){
            return -1;
        }
        int rotation = check(A[0], B, A);
        System.out.println(rotation);
        if(rotation != -1 || A[0] == B[0]){
            return rotation;
        }else{
            return check(B[0], B, A);
        } 
    }
    public int check(int num, int [] A, int [] B){
        int countA = 0;
        int countB = 0;
       // System.out.println(A.length);
        for(int i = 0; i < A.length; i++){
            if(A[i] != num && B[i] != num){
                return -1;
            }else if(A[i] != num){
                countA = countA+1;
                System.out.println("countA "+countA + "i->" + i);
            }else if(B[i] != num){
                countB++;
                System.out.println("countB "+countB + "i->" + i);
            }
        }
        return Math.min(countA, countB);
    }
}
