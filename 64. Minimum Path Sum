class Solution {
    public int minPathSum(int[][] grid) {
       int [][] sum = new int [grid.length][grid[0].length];
        int index_sum = 0;
        for(int i = 0 ; i < grid.length; i++){
            sum [i][0] = index_sum+grid[i][0];
            index_sum = sum [i][0];
            //System.out.println("i-> " + + i+"i" +sum [i][0] );
        }
        index_sum = 0;
        for(int i = 0 ; i < grid[0].length; i++){
            sum[0][i] = index_sum+grid[0][i];
            index_sum = sum[0][i];
        }

        for(int i = 1; i <grid.length; i++){
            for(int j = 1; j < grid[0].length; j++){
                //System.out.println("i-> " + i+ " j-> "+ j+ " sum-> "+ Math.min(sum[i-1][j], sum[i][j-1])+ "grid" + grid[i][j]);
                sum[i][j] = Math.min(sum[i-1][j], sum[i][j-1])+ grid[i][j];
                //System.out.println("i-> " + i+ " j-> "+ j+ " sum-> "+ sum[i][j]);
            }
        }
        return sum[sum.length-1][sum[0].length-1];
    }
}
