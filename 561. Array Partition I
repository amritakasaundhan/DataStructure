class Solution {
    public int arrayPairSum(int[] nums) {
        if(nums.length == 0){
            return 0;
        }
        if(nums.length %2 != 0){
            return -1;
        }
        PriorityQueue<Integer> q = new PriorityQueue<>();
        for(int number : nums){
            q.add(number);
        }
            int sum = 0;
            int n = q.size();
            for(int i = 0 ; i < n-1; i++){
                int num1 = q.poll();
                int num2 = q.poll();
                sum += Math.min(num1, num2);
                i = i+1;
            }
        return sum;
    }
}

// if(nums.length == 0){
//             return 0;
//         }
//         if(nums.length %2 != 0){
//             return -1;
//         }
//         Arrays.sort(nums);
//         int num1 = 0;
//         int num2 = 0;
//         int sum = 0;
//         for(int i = 0 ; i < nums.length-1; i++){
//             sum += Math.min(nums[i], nums[i+1]);
//             i = i+1;
//         }
//         return sum;
