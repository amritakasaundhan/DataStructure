Approach using dfs-> if root is null return, if root left child and right is null, add the string in result
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        if(root == null){
            return new ArrayList<>();
        }
        List<String> result = new ArrayList<>();
        dfs(root, result, "");
        return result;
    }
    public void dfs(TreeNode root, List<String>result, String str){
        if(root == null){
            return;
        }
        if(root.left == null && root.right == null){
            result.add(str+root.val);
            return;
        }
        dfs(root.left, result, str+root.val+"->");
        dfs(root.right, result, str+root.val+"->");
    }
}
