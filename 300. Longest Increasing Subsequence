Approach: Using map having arrays elements as key and the length of longest subsequence with that element. and one varibale max-length
store the first element in map with associating 1 as value
keep iterating in loop starting at index 1 until array length
now loop in map to get the max value of keys less less than element at ith index.
update the element at ith index with the maxvalue retrieved from keys plus 1.
and update the maxlength with max of value stored for the keys or maxlength


class Solution {
    public int lengthOfLIS(int[] nums) {
        if(nums.length == 0){
            return 0;
        }
        Map<Integer, Integer> map = new HashMap<>();
        map.put(nums[0], 1);
        int max_length = 1;
        for(int i = 1 ; i < nums.length; i++){
            int max = 0;
            for(Map.Entry<Integer,Integer>element : map.entrySet()){
                if(element.getKey() < nums[i]){
                   max = Math.max(max, element.getValue()); 
                }
            }
            map.put(nums[i], max+1);
            max_length = Math.max(max_length, max+1);
        }
        return max_length;
    }
}
