class Solution {
    public int climbStairs(int n) {
        int [] memo = new int [n+1];
        int count = helper(n, memo);
        return count;
        
    }
    public int helper(int n, int [] memo){
        if(n < 0){
            return 0;
        }
        if(n == 1 || n == 0){
            return 1;
        }
        if(memo[n] >0){
            return memo[n];
        }
        memo[n] = helper(n-1, memo) + helper(n-2, memo);
        return memo[n];
    }
}


public class Solution {
    public int climbStairs(int n) {
        if (n == 1) {
            return 1;
        }
        int first = 1;
        int second = 2;
        for (int i = 3; i <= n; i++) {
            int third = first + second;
            first = second;
            second = third;
        }
        return second;
    }
}
